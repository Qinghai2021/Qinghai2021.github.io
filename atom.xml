<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-25T11:03:06.743Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Qinghai2021</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>镇店之宝</title>
    <link href="http://example.com/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/"/>
    <id>http://example.com/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/</id>
    <published>2022-08-25T10:44:07.000Z</published>
    <updated>2022-08-25T11:03:06.743Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/1.jpg"></p><p><img src="/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/2.jpg"></p><p><img src="/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/3.jpg"></p><p><img src="/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/4.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/1.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/08/25/%E9%95%87%E5%BA%97%E4%B9%8B%E5%AE%9D/2.jp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GitHub + Hexo + Node.js + Git搭建个人博客</title>
    <link href="http://example.com/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2022-08-25T09:45:41.000Z</published>
    <updated>2022-08-25T10:35:04.873Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、搭建环境"><a href="#1、搭建环境" class="headerlink" title="1、搭建环境"></a>1、搭建环境</h3><p>操作系统系统：Windows10</p><p>Node.js：v14.18.2</p><p>Git：2.37.2.windows.2 </p><h3 id="2、Node-js安装及配置"><a href="#2、Node-js安装及配置" class="headerlink" title="2、Node.js安装及配置"></a>2、Node.js安装及配置</h3><p><a href="https://nodejs.org/zh-cn/download/releases/">node.js以往的版本</a></p><h4 id="步骤一：下载并安装"><a href="#步骤一：下载并安装" class="headerlink" title="步骤一：下载并安装"></a>步骤一：下载并安装</h4><p>下载完成后进行安装，node.js安装一路next直至完成</p><h4 id="步骤二：检查是否安装成功"><a href="#步骤二：检查是否安装成功" class="headerlink" title="步骤二：检查是否安装成功"></a>步骤二：检查是否安装成功</h4><p>【win+R】键，输入cmd，然后回车，打开cmd窗口</p><ul><li><p>检查其是否安装成功，输入 node -v</p></li><li><p>检查npm是否也安装成功 ，输入 npm -v</p><blockquote><p>新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装&#x2F;卸载Node.js需要装的东西</p></blockquote></li></ul><h4 id="步骤三：配置默认安装目录和缓存日志目录"><a href="#步骤三：配置默认安装目录和缓存日志目录" class="headerlink" title="步骤三：配置默认安装目录和缓存日志目录"></a>步骤三：配置默认安装目录和缓存日志目录</h4><p>为了不占用C盘空间，修改node.js的全局模块module的下载路径和cache缓存路径，其默认位置在<code>C:\Users\用户名\AppData\Roaming\npm</code></p><ul><li><p>在我们安装node.js目录下创建两个文件夹，名分别为<code>node_global</code>和<code>node_cache</code>，且在这<code>node_global</code>文件夹下在创建一个名为<code>node_modules</code>的文件夹</p></li><li><p>win+R，cmd打开控制台，输入以下命令修改其默认路径</p><p>npm config set prefix “F:\Develop_tools\node_js\node_global” </p><p>npm config set cache “F:\Develop_tools\node_js\node_cache”</p></li></ul><h4 id="步骤四：配置nodejs环境变量"><a href="#步骤四：配置nodejs环境变量" class="headerlink" title="步骤四：配置nodejs环境变量"></a>步骤四：配置nodejs环境变量</h4><p>将默认配置的nmp路径<code>C:\Users\用户名\AppData\Roaming\npm</code>删除，添加一个你新建的global路径</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825154829124.png" alt="image-20220825154829124"></p><p>在系统变量（环境变量）添加NODE_PATH，用来告诉系统， 下载的模块或者包都在这里了</p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825143044875.png" alt="image-20220825143044875" style="zoom: 80%;"><p>在系统变量（环境变量）PATH中添加NODE_PATH</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825144710580.png" alt="image-20220825144710580"></p><h4 id="步骤五：设置npm淘宝镜像"><a href="#步骤五：设置npm淘宝镜像" class="headerlink" title="步骤五：设置npm淘宝镜像"></a>步骤五：设置npm淘宝镜像</h4><p>使用阿里定制的cnpm命令行工具代替默认的npm，输入以下代码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>检查是否安装成功：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm -v</span><br></pre></td></tr></table></figure><p>安装成功之后，以后安装依赖包的方式和npm的是一样的，只是npm的命令换成是cnpm就可以了。</p><h3 id="3、Git安装"><a href="#3、Git安装" class="headerlink" title="3、Git安装"></a>3、Git安装</h3><p><a href="https://git-scm.com/">Git 官网下载</a></p><p>Git安装比较简单，下载后一路next直至完成即可，无需多余配置</p><h3 id="4、Github建立仓库"><a href="#4、Github建立仓库" class="headerlink" title="4、Github建立仓库"></a>4、Github建立仓库</h3><ul><li><p>仓库名：用户名.github.io</p></li><li><p>branch：默认名为main，这里可以修改，一旦创建就无法修改了</p></li></ul><h3 id="5、下载hexo-script-的安装脚本"><a href="#5、下载hexo-script-的安装脚本" class="headerlink" title="5、下载hexo-script]的安装脚本"></a>5、下载hexo-script]的安装脚本</h3><ul><li><p>选择最新版本,只需下载install.sh即可，<a href="https://github.com/kjhuanhao/hexo-script/releases"><strong>下载install.sh</strong></a></p></li><li><p>选择一个你想存放博客文件的位置，创建一个文件夹，名字随意，将下载好的install.sh放到其中</p></li><li><p>我创建了一个[myblog]文件夹，然后在此文件夹下，<strong>右键打开git bash</strong></p></li></ul><hr><h3 id="6、检测node-js和git环境"><a href="#6、检测node-js和git环境" class="headerlink" title="6、检测node.js和git环境"></a>6、检测node.js和git环境</h3><h4 id="检测node-js环境"><a href="#检测node-js环境" class="headerlink" title="检测node.js环境"></a>检测node.js环境</h4><p>在存放install.sh脚本的目录中,右键打开git bash然后运行以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh test_node</span><br></pre></td></tr></table></figure><p>如果出现了如图的情况证明环境变量是配置成功的</p><p>(出现了版本号和成功的提示信息代表配置成功)</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825151430500.png" alt="image-20220825151430500"></p><p>如果你并发现有版本号的出现,而是红色的错误信息,你可能需要手动配置node.js的环境变量,或者重新安装node.js并注意勾选<strong>Add to PATH</strong></p><hr><h4 id="检测git环境"><a href="#检测git环境" class="headerlink" title="检测git环境"></a>检测git环境</h4><p>如果你想要检测git环境或者查看当前git的版本号,您可以在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh test_git</span><br></pre></td></tr></table></figure><p>一般情况下安装git工具后git环境是会自动配置的,可以无需检测git环境.此脚本可以用于linux系统,出现版本号信息则配置为成功.</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825151534207.png" alt="image-20220825151534207"></p><hr><h3 id="7、一键安装hexo博客"><a href="#7、一键安装hexo博客" class="headerlink" title="7、一键安装hexo博客"></a>7、一键安装hexo博客</h3><p>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source install.sh hexo_win</span><br></pre></td></tr></table></figure><p>提示:此时你可以去来一杯卡布奇诺,大约两分钟的时间,博客即可自动安装完成,如图:</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825152443388.png" alt="image-20220825152443388"></p><p>当您看到出现<code>Please run hexo s to check it out!</code>的提示,证明您已经安装成功,此时你可以运行hexo s 然后查看你的博客</p><p>自动完成全部安装过程并生成博客文件</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825152153353.png" alt="image-20220825152153353"></p><p>进入hexblog目录，输入命令 hexo  s ，开启本地预览</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexoblog</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>注意:要先cd到hexoblog目录哦!执行以上命令即可</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825152528941.png" alt="image-20220825152528941"></p><blockquote><p>在浏览器访问:<a href="http://localhost:4000/">http://localhost:4000 </a>,你就可以在本地预览了,浏览情况如图:</p></blockquote><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825152718571.png" alt="image-20220825152718571"></p><h3 id="8、生成SSH秘钥并配置GitHub"><a href="#8、生成SSH秘钥并配置GitHub" class="headerlink" title="8、生成SSH秘钥并配置GitHub"></a>8、生成SSH秘钥并配置GitHub</h3><p>这是你的github与本地传输数据时需要使用的密钥</p><p>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh git_ssh</span><br></pre></td></tr></table></figure><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825162832088.png" alt="image-20220825162832088"></p><p>可以看到会有四条可执行命令，输入对应数字可以执行对应的命令</p><ul><li><p>执行1后，一直按回车，直至结束，输入yes，可以一键生成秘钥</p><ul><li>生成密钥位置：C:\Users\用户名\ .ssh\id_rsa.pub</li><li>如果你的电脑已经存在秘钥,程序将会自动退出</li></ul></li><li><p>执行2后，可以查看你电脑中已生成的秘钥</p><ul><li><p>将上述生成密钥与github中进行配置</p></li><li><p>进入Github —&gt; 头像 —&gt; Setting —&gt; SSH and GPG keys —&gt; New SSH key</p></li></ul></li><li><p>执行3后，可以检查秘钥是否配置github成功</p></li><li><p>执行4后，可以检查秘钥是否配置coding成功 </p><ul><li>coding是腾讯云的，咱们是与github对接，不用管这个</li></ul></li></ul><hr><h3 id="9、配置博客部署GitHub"><a href="#9、配置博客部署GitHub" class="headerlink" title="9、配置博客部署GitHub"></a>9、配置博客部署GitHub</h3><p>在_config.yml文件中修改，注意冒号后面有空格</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span>  <span class="comment">#创建仓库时默认使用的branch</span></span><br></pre></td></tr></table></figure><h3 id="10、更换博客主题"><a href="#10、更换博客主题" class="headerlink" title="10、更换博客主题"></a>10、更换博客主题</h3><p><a href="https://hexo.io/themes/">hexo提供多种多样的主题：Themes | Hexo</a></p><ul><li>只要知道主题的github地址，使用git clone 下载到themes文件中</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Shen-Yu/hexo-theme-ayer themes/ayer</span><br></pre></td></tr></table></figure><ul><li>修改_config.yml文件</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">ayer</span></span><br></pre></td></tr></table></figure><h3 id="11、发布第一篇博客"><a href="#11、发布第一篇博客" class="headerlink" title="11、发布第一篇博客"></a>11、发布第一篇博客</h3><p>hexo博客可以使用markdown编写，它会将markdown文件进行解析成网页，之后将它们发布到github上，就可以通过<code>http://用户名.github.io/</code></p><p>使用hexo自动创建md文件，会在source下的_post中创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文件名&quot;</span><br></pre></td></tr></table></figure><p>也可以自己引入md文件到_post，md中的图片文件夹也引入进来，md文件中引用的图片应以相对路径引入</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825182617976.png" alt="image-20220825182617976"></p><blockquote><p>注意：md文章开头必须得有 Front Matter格式的信息，其中至少填写title和date</p><p><img src="/2022/08/25/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/image-20220825183120172.png" alt="image-20220825183120172"></p><p><a href="https://blog.csdn.net/qq_42549254/article/details/102721177">Front Matter其他参数</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl 或 hexo clean </span><br></pre></td></tr></table></figure><p>清除缓存文件 db.json 和已生成的静态文件 public 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>生成网站静态文件到默认设置的 public 文件夹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/">http://localhost:4000/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>自动生成网站静态文件，并部署到GitHub设定的仓库。</p><p>访问地址：http:&#x2F;&#x2F;用户名.github.io&#x2F;即可访问你的网站啦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1、搭建环境&quot;&gt;&lt;a href=&quot;#1、搭建环境&quot; class=&quot;headerlink&quot; title=&quot;1、搭建环境&quot;&gt;&lt;/a&gt;1、搭建环境&lt;/h3&gt;&lt;p&gt;操作系统系统：Windows10&lt;/p&gt;
&lt;p&gt;Node.js：v14.18.2&lt;/p&gt;
&lt;p&gt;Git：2.</summary>
      
    
    
    
    
  </entry>
  
</feed>
